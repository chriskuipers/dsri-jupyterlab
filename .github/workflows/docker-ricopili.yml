name: Publish Ricopili image
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
    - 'ricopili/Dockerfile'
    - '.github/workflows/docker-ricopili.yml'
# env:
#   IMAGE_ID: ghcr.io/maastrichtu-ids/jupyterlab:ricopili
jobs:
  build-and-push-ricopili:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Generate image ID and version
        run: |
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/jupyterlab
            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
            # Use Docker `latest` tag convention
            [ "$VERSION" == "main" ] && VERSION=ricopili
            echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
            echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and publish Knowledge Graph Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./ricopili/Dockerfile
          pull: true
          push: true
          tags: ${{ env.IMAGE_ID }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # builder: ${{ steps.buildx.outputs.name }}